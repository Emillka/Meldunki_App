name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'magenta-mass/package-lock.json'
        
    - name: Install dependencies
      run: cd magenta-mass && npm ci
      
    - name: Run TypeScript type checking
      run: cd magenta-mass && npm run astro check
      
    - name: Run unit tests
      run: cd magenta-mass && npm run test:unit
      
    - name: Generate coverage report
      run: cd magenta-mass && npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./magenta-mass/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'magenta-mass/package-lock.json'
        
    - name: Install dependencies
      run: cd magenta-mass && npm ci
      
    - name: Install Playwright browsers
      run: cd magenta-mass && npx playwright install --with-deps
      
    - name: Build application
      run: cd magenta-mass && npm run build
      
    - name: Run Playwright tests
      run: cd magenta-mass && npm run test:e2e
      
    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: magenta-mass/playwright-report/
        retention-days: 30
        
  build:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'magenta-mass/package-lock.json'
        
    - name: Install dependencies
      run: cd magenta-mass && npm ci
      
    - name: Build application
      run: cd magenta-mass && npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: magenta-mass/dist/
        
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: dist/
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        branch: main
        force_orphan: true
          
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'magenta-mass/package-lock.json'
        
    - name: Install dependencies
      run: cd magenta-mass && npm ci
      
    - name: Run security audit
      run: cd magenta-mass && npm audit --audit-level moderate
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
