name: Pull Request Checks

on:
  pull_request:
    branches:
      - master
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  lint-and-type-check:
    name: Linting & Type Checking
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd magenta-mass
          npm ci
      
      - name: Run Astro type checking
        run: |
          cd magenta-mass
          npx astro check
  
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd magenta-mass
          npm ci
      
      - name: Run unit tests
        run: |
          cd magenta-mass
          npm run test:unit
      
      - name: Run API tests
        run: |
          cd magenta-mass
          npm run test:api
      
      - name: Run integration tests
        run: |
          cd magenta-mass
          npm run test:integration
      
      - name: Upload test coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          directory: ./magenta-mass/coverage
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
  
  e2e-tests:
    name: E2E Tests (Optional)
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd magenta-mass
          npm ci
      
      - name: Install Playwright browsers
        run: |
          cd magenta-mass
          npx playwright install --with-deps
      
      - name: Setup test environment
        run: |
          cd magenta-mass
          cp test.env.example .env.test || true
          echo "Test environment setup completed"
      
      - name: Build application
        run: |
          cd magenta-mass
          npm run build
      
      - name: Start application server
        run: |
          cd magenta-mass
          npm start &
        env:
          PORT: 4321
      
      - name: Wait for server to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:4321; do sleep 2; done'
      
      - name: Run E2E tests
        run: |
          cd magenta-mass
          npm run test:e2e
        env:
          CI: true
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: magenta-mass/playwright-report/
          retention-days: 7
  
  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd magenta-mass
          npm ci
      
      - name: Build application
        run: |
          cd magenta-mass
          npm run build
      
      - name: Verify build output
        run: |
          cd magenta-mass
          if [ ! -d "dist" ]; then
            echo "Build failed - dist directory not found"
            exit 1
          fi
          echo "Build successful - dist directory exists"
